function cdg() {
    cd ~/Workspace/go/src
}

function flamenco() {
    cd ~/Documents/Guitar/Flamenco
}

## This changes cd to be cd then ls -lah. I found this here: https://askubuntu.com/questions/16106/how-can-i-create-an-alias-for-cd-and-ls
function cd() {
    	new_directory="$*";
    	if [ $# -eq 0 ]; then 
		new_directory=${HOME};
	fi;
	builtin cd "${new_directory}" && ls -lah
}

## This changed directories to desktop
function desk() {
        cd ~/Desktop/
}
function mark {
    export $1=`pwd`;
} 
## when I want to remember a directory, I can just type, e.g. `mark there` then to change back to it I type `cd $there`

Then when I want to go back to that location, I just type cd $there

function trash {
        mv -fv $1 ~/.Trash
}
function whatatune {
~/Dropbox/Music/whatatune/Bash/downloadtags.sh
}

function playdesk() {
        #This function will play music files on the desktop. Or, more specifically, it will play a list of the files matched by the regular expression [.]m
        cd ~/Desktop/
        playlist=$(mktemp ${TMPDIR:-/tmp}/files.XXXXXX) #{} expand the variable so the path of TMPDIR is actually used. #where is this file stored??
        ls | grep [.]m > $playlist
        while read SONG
        do
                echo ""
                echo "playing $SONG"
                ffplay -showmode 1 -window_title "Desktop Playlist" -autoexit "$SONG"
        done < $playlist
        #for i in ./*.m4a; do ffplay -nodisp -autoexit "$i"; done #this is the original one liner I wanted to create. The only probably was that it won't play mp3s.
}

function play() {
        #This function will play music files in the current folder. Or, more specifically, it will play a list of the files matched by the regular expression [.]m
        playlist=$(mktemp ${TMPDIR:-/tmp}/files.XXXXXX) #{} expand the variable so the path of TMPDIR is actually used. #where is this file stored??
        ls | grep [.]m > $playlist
        while read SONG
        do
                echo ""
                echo "playing $SONG"
                ffplay -showmode 1 -window_title "Desktop Playlist" -autoexit "$SONG"
        done < $playlist
        #for i in ./*.m4a; do ffplay -nodisp -autoexit "$i"; done #this is the original one liner I wanted to create. The only probably was that it won't play mp3s.
}

function trim {
        # first argument: input file name
        # second argument: start time
        # third argument: finish time
        ffmpeg -i "$1" -ss $2 -c copy -to $3 "trimmed_$1"
}

function p-dl {
        # takes one argument - URL
        youtube-dl -o "./%(extractor)s/%(title)s.%(ext)s" $1
}

# TODO: make any git command automatically do a `git status` after
# TODO: make all parameters passed in no matter how many
function g() {
	    git $1 $2 $3 $4 $5 $6 $7 $8 $9
      # TODO: if $1 != status, then do the next line
      git status
}
