export EDITOR="vim"
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin # this was added as part of the postgress install: http://postgresapp.com/documentation/cli-tools.html
# export PS1='\[\033[0;36m\]\t\[\e[0m\] \w \[\033[0;32m\]$(vcprompt -f "[%n:%b%u%m] ")\[\033[1;34m\]\$ \[\033[0m\] \n→ '
# This emacs may be getting overwritten by inputrc. Not sure:
set -o emacs 
export TERM=xterm-256color
# stty stop "" # dissables CTRL-S, which I somtimes press accidentally in vim and seems to make it hang unless CTRL-Q is pressed: https://superuser.com/questions/1390977/pressing-ctrl-s-by-mistake-while-using-vim

# https://superuser.com/questions/1601543/ctrl-x-e-without-executing-command-immediately/1601690#1601690
edit_wo_executing() {
    local editor="${EDITOR:-vim}"
    tmpf="$(mktemp)"
    printf '%s\n' "$READLINE_LINE" > "$tmpf"
    "$editor" "$tmpf"
    READLINE_LINE="$(<"$tmpf")"
    READLINE_POINT="${#READLINE_LINE}"
    rm "$tmpf"
}
# This changes the keybinding to open the readline in vim
bind -x '"\C-e":edit_wo_executing'
bind -m vi-command '"v": ignore' # https://unix.stackexchange.com/questions/653739/how-do-i-disable-esc-v-in-bash-opening-the-previous-command-in-an-editor

# Set McFly to use light colour scheme
export MCFLY_LIGHT=TRUE
export MCFLY_RESULTS_SORT=LAST_RUN

# # The problem with this code is that it messes up reverse search (and also McFly)
# # Make each tmxu pane have its own history: https://stackoverflow.com/questions/55816863/how-can-i-make-all-tmux-panes-have-their-own-unique-shell-history
# if [[ $TMUX_PANE ]]; then
#     HISTFILE=$HOME/.bash_history_tmux_${TMUX_PANE:1}
# fi
# # Maybe try these solutions: https://askubuntu.com/questions/80371/bash-history-handling-with-multiple-terminals

source /tmp/jj_aliases
export CLICOLOR=1 # make ls command display colors by defult (like with -N argument)

if [ "$(uname -s)" = "Linux" ]; then
  # reverse-mouse  # This is for linux minut. For Ubuntu you can do this permenantly in settings
  alias open='xdg-open'
fi

##### This is from the old PS1 (prompt) setup
# # Colors from http://wiki.archlinux.org/index.php/Color_Bash_Prompt
# NO_COLOR='\e[0m'
# EBLACK='\e[1;30m'
# GREEN='\e[0;32m'
# RED='\e[0;31m'
# YELLOW='\e[0;33m'
# PS1="\n\u:\w \$(git_bash_output)\[$NO_COLOR\] \n→ "

# #this has something to do with the PS1 variable
# function _minutes_since_last_commit {
#     now=`date +%s`
#     last_commit=`git log --pretty=format:'%at' -1`
#     seconds=$((now-last_commit))
#     minutes=$((seconds/60))
#     echo $minutes
# }
# 
# #this has something to do with the PS1 variable
# git_bash_output() {
#     local g="$(__gitdir)"
#     if [ -n "$g" ]; then
#         local MINUTES_SINCE_LAST_COMMIT=`_minutes_since_last_commit`
#         if [ "$MINUTES_SINCE_LAST_COMMIT" -gt 30 ]; then
#             local COLOR=${RED}
#         elif [ "$MINUTES_SINCE_LAST_COMMIT" -gt 10 ]; then
#             local COLOR=${YELLOW}
#         else
#             local COLOR=${GREEN}
#         fi
#         local HASH="$(vcprompt -f %h)"
#         local SINCE_LAST_COMMIT="${COLOR}$(_minutes_since_last_commit)m${NO_COLOR}"
#         local GIT_PROMPT=`__git_ps1 "${YELLOW}%s|${HASH}|${NO_COLOR}${SINCE_LAST_COMMIT}"`
#         echo ${GIT_PROMPT}
#     fi
# }


###### this is the old aliases file that was reference from the original bashrc file
## Finder
#alias o='open . &'

## Processes
alias tu='top -o cpu' #cpu
alias tm='top -o vsize' #memory

## Command Line
#alias l.='ls -d .[^.]*'
alias cp='cp -i'
alias mv='mv -i'
alias l='ls -alhtr' # long, most recent first, colour
alias e='vim'
#alias ll='ls -Fol'
alias la='ls -lah'
#alias cdd='cd -'
alias cdw='cd ~/Workspace'
alias cdm='cd /home/jaredjohnston/Workspace/reefcloud-metrics'
alias tailf='tail -f'
alias cdev='cd ~/.dotfiles/home'
alias h='cd ~/'
alias syncdesk=desksync
alias copy="tr -d '\n' | pbcopy" # Note: this stips all newlines, not just the trailing one
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias .......="cd ../../../../../.."
alias ........="cd ../../../../../../.."
alias .........="cd ../../../../../../../.."
alias ..........="cd ../../../../../../../../.."
alias ...........="cd ../../../../../../../../../.."
alias ............="cd ../../../../../../../../../../.."
alias .............="cd ../../../../../../../../../../../.."

# #alias rmsf="mv ~/Library/Safari ~/Desktop/Safari-`date +%Y%m%d%H%M%S`; \
# #rm -Rf ~/Library/Caches/Apple\ -\ Safari\ -\ Safari\ Extensions\ Gallery; \
# #rm -Rf ~/Library/Caches/Metadata/Safari; \
# #rm -Rf ~/Library/Caches/com.apple.Safari; \
# #rm -Rf ~/Library/Caches/com.apple.WebKit.PluginProcess; \
# #rm -Rf ~/Library/Cookies/Cookies.binarycookies; \
# #rm -Rf ~/Library/Preferences/Apple\ -\ Safari\ -\ Safari\ Extensions\ Gallery; \
# #rm -Rf ~/Library/Preferences/com.apple.Safari.LSSharedFileList.plist; \
# #rm -Rf ~/Library/Preferences/com.apple.Safari.RSS.plist; \
# #rm -Rf ~/Library/Preferences/com.apple.Safari.plist; \
# #rm -Rf ~/Library/Preferences/com.apple.WebFoundation.plist; \
# #rm -Rf ~/Library/Preferences/com.apple.WebKit.PluginHost.plist; \
# #rm -Rf ~/Library/Preferences/com.apple.WebKit.PluginProcess.plist; \
# #rm -Rf ~/Library/PubSub/Database; \
# #rm -Rf ~/Library/Saved\ Application\ State/com.apple.Safari.savedState"

#I uninstalled nodejs from nvm and installed it from the official ubuntu repository because I need to do it for tern for vim.
export NVM_DIR="/home/jaredjohnston/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
#[[ -r $NVM_DIR/bash_completion ]] && . $NVM_DIR/bash_completion # this enables nvm completion

# eval "$(direnv hook bash)"

# eval "$(zoxide init bash)"
# eval "$(mcfly init bash)"
export PATH=$HOME/local/bin:$PATH
# hist import

export MYVIMRC="/tmp/jj_vimrc"
export VIMINIT="source $MYVIMRC"

# # Generated for envman. Do not edit. I have commented out because I don't think I use envman
# [ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/jaredjohnston/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/jaredjohnston/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/jaredjohnston/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/jaredjohnston/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
